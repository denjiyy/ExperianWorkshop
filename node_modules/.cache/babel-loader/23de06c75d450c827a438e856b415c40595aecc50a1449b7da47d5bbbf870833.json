{"ast":null,"code":"import axios from \"axios\";\nconst baseURL = \"https://localhost:7223/api/\";\naxios.defaults.headers.post['Content-Type'] = 'application/json';\nexport default {\n  dUser({\n    url = baseURL + 'Users/',\n    idUser = ''\n  }) {\n    return {\n      fetchAll: async () => {\n        return await axios.get(url);\n      },\n      fetchById: async (id = '') => {\n        return await axios.get(`${url}${id}`);\n      },\n      create: async newRecord => {\n        return await fetch(url, {\n          method: 'POST',\n          // Setting method to POST\n          headers: {\n            'Accept': 'application/json',\n            'Content-Type': 'application/json' // Indicates that the request body is JSON\n          },\n          body: JSON.stringify(newRecord) // Stringify the newRecord object to send it as JSON\n        });\n      },\n      update: async (id = idUser !== null && idUser !== void 0 ? idUser : '', updateRecord) => {\n        return await axios.put(`${url}${id}`, updateRecord);\n      },\n      delete: async (id = idUser !== null && idUser !== void 0 ? idUser : '') => {\n        return await axios.delete(`${url}${id}`);\n      }\n    };\n  }\n};","map":{"version":3,"names":["axios","baseURL","defaults","headers","post","dUser","url","idUser","fetchAll","get","fetchById","id","create","newRecord","fetch","method","body","JSON","stringify","update","updateRecord","put","delete"],"sources":["D:/experianProject/experian/ExperianWorkshop/src/actions/api.ts"],"sourcesContent":[" import axios,{AxiosResponse} from \"axios\";\r\nimport { SignUpProps } from \"../types/form\";\r\nimport { DUser } from \"../reducers\";\r\nimport { create } from \"domain\";\r\nimport { json } from \"stream/consumers\";\r\n const baseURL = \"https://localhost:7223/api/\"\r\n interface UrlProps{\r\n    url?:string,\r\n    idUser?:string,\r\n\r\n }\r\naxios.defaults.headers.post['Content-Type'] = 'application/json'; \r\n\r\n export default{\r\n\r\n    dUser({ url = baseURL + 'Users/', idUser = '' }: UrlProps) {\r\n        return {\r\n          fetchAll: async (): Promise<AxiosResponse<any>> => {\r\n            return await axios.get(url);\r\n          },\r\n          fetchById: async (id: string = ''): Promise<AxiosResponse<any>> => {\r\n            return await axios.get(`${url}${id}`);\r\n          },\r\n           create: async (newRecord: SignUpProps) => {\r\n            return await fetch(url, {\r\n              method: 'POST', // Setting method to POST\r\n              headers: {\r\n                'Accept': 'application/json',\r\n                'Content-Type': 'application/json' // Indicates that the request body is JSON\r\n              },\r\n              body: JSON.stringify(newRecord) // Stringify the newRecord object to send it as JSON\r\n            });\r\n          },\r\n          update: async (id: string = idUser ?? '', updateRecord: SignUpProps): Promise<AxiosResponse<any>> => {\r\n            return await axios.put(`${url}${id}`, updateRecord);\r\n          },\r\n          delete: async (id: string = idUser ?? ''): Promise<AxiosResponse<any>> => {\r\n            return await axios.delete(`${url}${id}`);\r\n          },\r\n        };\r\n      },\r\n\r\n }\r\n"],"mappings":"AAAC,OAAOA,KAAK,MAAsB,OAAO;AAKzC,MAAMC,OAAO,GAAG,6BAA6B;AAM9CD,KAAK,CAACE,QAAQ,CAACC,OAAO,CAACC,IAAI,CAAC,cAAc,CAAC,GAAG,kBAAkB;AAE/D,eAAc;EAEXC,KAAKA,CAAC;IAAEC,GAAG,GAAGL,OAAO,GAAG,QAAQ;IAAEM,MAAM,GAAG;EAAa,CAAC,EAAE;IACvD,OAAO;MACLC,QAAQ,EAAE,MAAAA,CAAA,KAAyC;QACjD,OAAO,MAAMR,KAAK,CAACS,GAAG,CAACH,GAAG,CAAC;MAC7B,CAAC;MACDI,SAAS,EAAE,MAAAA,CAAOC,EAAU,GAAG,EAAE,KAAkC;QACjE,OAAO,MAAMX,KAAK,CAACS,GAAG,CAAC,GAAGH,GAAG,GAAGK,EAAE,EAAE,CAAC;MACvC,CAAC;MACAC,MAAM,EAAE,MAAOC,SAAsB,IAAK;QACzC,OAAO,MAAMC,KAAK,CAACR,GAAG,EAAE;UACtBS,MAAM,EAAE,MAAM;UAAE;UAChBZ,OAAO,EAAE;YACP,QAAQ,EAAE,kBAAkB;YAC5B,cAAc,EAAE,kBAAkB,CAAC;UACrC,CAAC;UACDa,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACL,SAAS,CAAC,CAAC;QAClC,CAAC,CAAC;MACJ,CAAC;MACDM,MAAM,EAAE,MAAAA,CAAOR,EAAU,GAAGJ,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE,EAAEa,YAAyB,KAAkC;QACnG,OAAO,MAAMpB,KAAK,CAACqB,GAAG,CAAC,GAAGf,GAAG,GAAGK,EAAE,EAAE,EAAES,YAAY,CAAC;MACrD,CAAC;MACDE,MAAM,EAAE,MAAAA,CAAOX,EAAU,GAAGJ,MAAM,aAANA,MAAM,cAANA,MAAM,GAAI,EAAE,KAAkC;QACxE,OAAO,MAAMP,KAAK,CAACsB,MAAM,CAAC,GAAGhB,GAAG,GAAGK,EAAE,EAAE,CAAC;MAC1C;IACF,CAAC;EACH;AAEL,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}