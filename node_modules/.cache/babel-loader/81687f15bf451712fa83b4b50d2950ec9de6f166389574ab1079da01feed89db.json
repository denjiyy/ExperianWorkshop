{"ast":null,"code":"import { configureStore } from \"@reduxjs/toolkit\";\nimport { useDispatch } from \"react-redux\";\nimport { apiSlice } from \"./apiSlice\";\nimport authReducer from \"./authSlice\";\nexport const store = configureStore({\n  reducer: {\n    //DUser,\n    [apiSlice.reducerPath]: apiSlice.reducer,\n    auth: authReducer\n  },\n  // middleware: () => new Tuple(thunk,logger)\n  middleware: getDefaultMiddleware => getDefaultMiddleware().concat(apiSlice.middleware)\n  //.concat(logger)\n  ,\n\n  devTools: true\n});\nexport const useAppDispatch = useDispatch.withTypes();","map":{"version":3,"names":["configureStore","useDispatch","apiSlice","authReducer","store","reducer","reducerPath","auth","middleware","getDefaultMiddleware","concat","devTools","useAppDispatch","withTypes"],"sources":["D:/experianProject/experian/ExperianWorkshop/src/actions/store.ts"],"sourcesContent":["import { configureStore,Tuple } from \"@reduxjs/toolkit\";\r\nimport {useDispatch} from \"react-redux\"\r\nimport { thunk } from \"redux-thunk\";\r\nimport logger from \"redux-logger\"\r\nimport {DUser} from \"../reducers\"\r\nimport { apiSlice } from \"./apiSlice\";\r\nimport authReducer from \"./authSlice\"\r\nexport const store = configureStore({\r\n  reducer:{\r\n    //DUser,\r\n    [apiSlice.reducerPath]:apiSlice.reducer,\r\n    auth:authReducer\r\n    },\r\n  // middleware: () => new Tuple(thunk,logger)\r\n  middleware:(getDefaultMiddleware)=>\r\n    getDefaultMiddleware().concat(apiSlice.middleware)\r\n  //.concat(logger)\r\n  ,\r\n  devTools:true,\r\n\r\n})\r\n\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport const useAppDispatch = useDispatch.withTypes<AppDispatch>() "],"mappings":"AAAA,SAASA,cAAc,QAAc,kBAAkB;AACvD,SAAQC,WAAW,QAAO,aAAa;AAIvC,SAASC,QAAQ,QAAQ,YAAY;AACrC,OAAOC,WAAW,MAAM,aAAa;AACrC,OAAO,MAAMC,KAAK,GAAGJ,cAAc,CAAC;EAClCK,OAAO,EAAC;IACN;IACA,CAACH,QAAQ,CAACI,WAAW,GAAEJ,QAAQ,CAACG,OAAO;IACvCE,IAAI,EAACJ;EACL,CAAC;EACH;EACAK,UAAU,EAAEC,oBAAoB,IAC9BA,oBAAoB,CAAC,CAAC,CAACC,MAAM,CAACR,QAAQ,CAACM,UAAU;EACnD;EAAA;;EAEAG,QAAQ,EAAC;AAEX,CAAC,CAAC;AAIF,OAAO,MAAMC,cAAc,GAAGX,WAAW,CAACY,SAAS,CAAc,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}