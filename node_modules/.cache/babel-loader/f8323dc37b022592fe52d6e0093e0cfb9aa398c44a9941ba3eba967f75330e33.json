{"ast":null,"code":"var _jsxFileName = \"D:\\\\experianProject\\\\experian\\\\ExperianWorkshop\\\\src\\\\components\\\\Icon\\\\Icon.tsx\";\nimport * as S from \"./elements\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// Icon component using the refined IconProps interface\nexport const Icon = ({\n  path,\n  xmlns = \"http://www.w3.org/2000/svg\",\n  // Default value for xmlns\n  viewBox = \"0 0 24 24\",\n  // Default value for viewBox, or adjust as needed\n  fill = \"none\",\n  stroke,\n  strokeOpacity\n}) => {\n  return /*#__PURE__*/_jsxDEV(S.Icon, {\n    xmlns: xmlns,\n    fill: fill,\n    viewBox: viewBox,\n    children: /*#__PURE__*/_jsxDEV(\"path\", {\n      d: path,\n      stroke: stroke,\n      strokeOpacity: strokeOpacity,\n      strokeWidth: \"2\",\n      strokeLinecap: \"round\",\n      strokeLinejoin: \"round\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 7\n  }, this);\n};\n//update the svg viewbox and fill\n// and path strokeOpacity\n//use ref to update the focus of the icon\n//may used icon without path or xmlns and then render it at the certain button\n_c = Icon;\nvar _c;\n$RefreshReg$(_c, \"Icon\");","map":{"version":3,"names":["S","jsxDEV","_jsxDEV","Icon","path","xmlns","viewBox","fill","stroke","strokeOpacity","children","d","strokeWidth","strokeLinecap","strokeLinejoin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["D:/experianProject/experian/ExperianWorkshop/src/components/Icon/Icon.tsx"],"sourcesContent":["import { HTMLSVGProps } from \"../../types\"\r\nimport * as S from \"./elements\"\r\n\r\nexport interface IconProps extends HTMLSVGProps {\r\n    path: string; \r\n    fill?: \"none\" | string;\r\n    stroke?: \"none\" | string;\r\n    strokeOpacity?: number;\r\n    viewBox ?: string;\r\n  }\r\n  \r\n  // Icon component using the refined IconProps interface\r\n  export const Icon = ({\r\n    path,\r\n    xmlns = \"http://www.w3.org/2000/svg\", // Default value for xmlns\r\n    viewBox = \"0 0 24 24\", // Default value for viewBox, or adjust as needed\r\n    fill = \"none\",\r\n    stroke,\r\n    strokeOpacity,\r\n  }: IconProps) => {\r\n    return (\r\n      <S.Icon\r\n        xmlns={xmlns}\r\n        fill={fill}\r\n        viewBox={viewBox}\r\n      >\r\n        <path\r\n          d={path}\r\n          stroke={stroke}\r\n          strokeOpacity={strokeOpacity}\r\n          strokeWidth=\"2\"\r\n          strokeLinecap=\"round\"\r\n          strokeLinejoin=\"round\"\r\n        />\r\n      </S.Icon>\r\n    );\r\n  };\r\n//update the svg viewbox and fill\r\n// and path strokeOpacity\r\n//use ref to update the focus of the icon\r\n//may used icon without path or xmlns and then render it at the certain button"],"mappings":";AACA,OAAO,KAAKA,CAAC,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAU7B;AACA,OAAO,MAAMC,IAAI,GAAGA,CAAC;EACnBC,IAAI;EACJC,KAAK,GAAG,4BAA4B;EAAE;EACtCC,OAAO,GAAG,WAAW;EAAE;EACvBC,IAAI,GAAG,MAAM;EACbC,MAAM;EACNC;AACS,CAAC,KAAK;EACf,oBACEP,OAAA,CAACF,CAAC,CAACG,IAAI;IACLE,KAAK,EAAEA,KAAM;IACbE,IAAI,EAAEA,IAAK;IACXD,OAAO,EAAEA,OAAQ;IAAAI,QAAA,eAEjBR,OAAA;MACES,CAAC,EAAEP,IAAK;MACRI,MAAM,EAAEA,MAAO;MACfC,aAAa,EAAEA,aAAc;MAC7BG,WAAW,EAAC,GAAG;MACfC,aAAa,EAAC,OAAO;MACrBC,cAAc,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACI,CAAC;AAEb,CAAC;AACH;AACA;AACA;AACA;AAAAC,EAAA,GA5BehB,IAAI;AAAA,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}