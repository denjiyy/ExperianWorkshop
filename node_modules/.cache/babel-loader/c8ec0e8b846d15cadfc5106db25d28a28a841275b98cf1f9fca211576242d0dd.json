{"ast":null,"code":"var _jsxFileName = \"D:\\\\experianProject\\\\experian\\\\ExperianWorkshop\\\\src\\\\components\\\\Button\\\\Button.tsx\";\nimport React, { forwardRef } from 'react';\nimport * as S from \"./elements\";\nimport { Icon } from \"../Icon\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n// export const Button = (isGame : boolean,children : ReactElement) => {\n\n//   return (\n//     <S.Button>{children}</S.Button>\n//   )\n// }\n//BodyMDMD\n\nexport const Button = /*#__PURE__*/forwardRef(_c = ({\n  fill,\n  variant,\n  iconPath,\n  children,\n  stroke,\n  viewBox,\n  strokeOpacity,\n  ...props\n}, ref) => {\n  return /*#__PURE__*/_jsxDEV(S.Button, {\n    ...props,\n    variant: variant,\n    ref: ref,\n    children: [children, iconPath != null && /*#__PURE__*/_jsxDEV(Icon, {\n      path: iconPath,\n      viewBox: viewBox,\n      stroke: stroke,\n      strokeOpacity: strokeOpacity,\n      fill: fill,\n      xmlns: \"http://www.w3.org/2000/svg\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 90\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 12\n  }, this);\n}); //using ref to access the button\n\n// export const Button = ({variant,target,icon,...props}:ButtonProps)=>{\n//   return <S.Button {...props} variant={variant} icon={icon} target={target} />;\n// }\n\n/*\r\n// Вашият компонент\r\nimport * as S from \"./elements\";\r\nimport { forwardRef, ForwardedRef } from \"react\";\r\nimport type { HTMLButtonProps } from \"../../types\";\r\n\r\nexport interface ButtonProps extends HTMLButtonProps {\r\n  variant?: \"primary\" | \"secondary\";\r\n}\r\n\r\nexport const Button = forwardRef(\r\n  (\r\n    { variant, ...props }: ButtonProps,\r\n    ref: ForwardedRef<HTMLButtonElement>\r\n  ) => {\r\n    return <S.Button {...props} variant={variant} ref={ref} />;\r\n  }\r\n);\r\n\r\nButton.displayName = \"Button\"; // Добавяне на displayName\r\n\r\nexport default Button;\r\n\r\n*/\n_c2 = Button;\nvar _c, _c2;\n$RefreshReg$(_c, \"Button$forwardRef\");\n$RefreshReg$(_c2, \"Button\");","map":{"version":3,"names":["React","forwardRef","S","Icon","jsxDEV","_jsxDEV","Button","_c","fill","variant","iconPath","children","stroke","viewBox","strokeOpacity","props","ref","path","xmlns","fileName","_jsxFileName","lineNumber","columnNumber","_c2","$RefreshReg$"],"sources":["D:/experianProject/experian/ExperianWorkshop/src/components/Button/Button.tsx"],"sourcesContent":["import React, { forwardRef,ForwardedRef, ReactElement, Children } from 'react'\r\nimport * as S from \"./elements\" \r\nimport type { HTMLButtonProps } from '../../types'\r\nimport {Icon} from \"../Icon\"\r\nimport type { HTMLHeadingPropsBody } from '../../types'\r\nexport interface ButtonProps extends HTMLButtonProps {\r\n  variant ?: \"primary\" | \"secondary\" | \"tertiary\" | \"ghost\",\r\n  iconPath ?:\"none\" | string,\r\n  fill ?: \"none\"  | string,\r\n  stroke?: \"none\" | string;\r\n  strokeOpacity?: number;\r\n  viewBox ?: string;\r\n}\r\n\r\n// export const Button = (isGame : boolean,children : ReactElement) => {\r\n    \r\n//   return (\r\n//     <S.Button>{children}</S.Button>\r\n//   )\r\n// }\r\n//BodyMDMD\r\n\r\n\r\nexport const Button = forwardRef(\r\n  (\r\n    { fill,variant,iconPath,children,stroke,viewBox,strokeOpacity,...props }: ButtonProps,\r\n    ref: ForwardedRef<HTMLButtonElement>,\r\n    \r\n\r\n  ) => {\r\n    return <S.Button {...props} variant={variant} ref={ref}>{children}{iconPath!=null && <Icon path={iconPath} viewBox={viewBox} stroke={stroke} strokeOpacity={strokeOpacity} fill={fill} xmlns=\"http://www.w3.org/2000/svg\" />}\r\n    </S.Button>;\r\n  }\r\n); //using ref to access the button\r\n\r\n\r\n// export const Button = ({variant,target,icon,...props}:ButtonProps)=>{\r\n//   return <S.Button {...props} variant={variant} icon={icon} target={target} />;\r\n// }\r\n\r\n/*\r\n// Вашият компонент\r\nimport * as S from \"./elements\";\r\nimport { forwardRef, ForwardedRef } from \"react\";\r\nimport type { HTMLButtonProps } from \"../../types\";\r\n\r\nexport interface ButtonProps extends HTMLButtonProps {\r\n  variant?: \"primary\" | \"secondary\";\r\n}\r\n\r\nexport const Button = forwardRef(\r\n  (\r\n    { variant, ...props }: ButtonProps,\r\n    ref: ForwardedRef<HTMLButtonElement>\r\n  ) => {\r\n    return <S.Button {...props} variant={variant} ref={ref} />;\r\n  }\r\n);\r\n\r\nButton.displayName = \"Button\"; // Добавяне на displayName\r\n\r\nexport default Button;\r\n\r\n*/\r\n\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,UAAU,QAA6C,OAAO;AAC9E,OAAO,KAAKC,CAAC,MAAM,YAAY;AAE/B,SAAQC,IAAI,QAAO,SAAS;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAW5B;;AAEA;AACA;AACA;AACA;AACA;;AAGA,OAAO,MAAMC,MAAM,gBAAGL,UAAU,CAAAM,EAAA,GAC9BA,CACE;EAAEC,IAAI;EAACC,OAAO;EAACC,QAAQ;EAACC,QAAQ;EAACC,MAAM;EAACC,OAAO;EAACC,aAAa;EAAC,GAAGC;AAAmB,CAAC,EACrFC,GAAoC,KAGjC;EACH,oBAAOX,OAAA,CAACH,CAAC,CAACI,MAAM;IAAA,GAAKS,KAAK;IAAEN,OAAO,EAAEA,OAAQ;IAACO,GAAG,EAAEA,GAAI;IAAAL,QAAA,GAAEA,QAAQ,EAAED,QAAQ,IAAE,IAAI,iBAAIL,OAAA,CAACF,IAAI;MAACc,IAAI,EAAEP,QAAS;MAACG,OAAO,EAAEA,OAAQ;MAACD,MAAM,EAAEA,MAAO;MAACE,aAAa,EAAEA,aAAc;MAACN,IAAI,EAAEA,IAAK;MAACU,KAAK,EAAC;IAA4B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClN,CAAC;AACb,CACF,CAAC,CAAC,CAAC;;AAGH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBAC,GAAA,GAjBajB,MAAM;AAAA,IAAAC,EAAA,EAAAgB,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}