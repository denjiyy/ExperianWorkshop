{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    user: null,\n    token: null\n  },\n  reducers: {\n    setCredentials: (state, action) => {\n      const {\n        user,\n        accessToken\n      } = action.payload;\n      state.user = user;\n      state.token = accessToken;\n    },\n    logOut: (state, action) => {\n      state.user = null;\n      state.token = null;\n    }\n  }\n});\nexport const {\n  setCredentials,\n  logOut\n} = authSlice.actions;\nexport default authSlice.reducer;\nexport const selectCurrentUser = state => state.auth.user;\nexport const selectCurrentToken = state => state.auth.token;\n\n//state to be defined with type\n\n// ------> 1","map":{"version":3,"names":["createSlice","authSlice","name","initialState","user","token","reducers","setCredentials","state","action","accessToken","payload","logOut","actions","reducer","selectCurrentUser","auth","selectCurrentToken"],"sources":["D:/experianProject/experian/ExperianWorkshop/src/actions/authSlice.ts"],"sourcesContent":["import { createEntityAdapter, createSlice } from \"@reduxjs/toolkit\";\r\nimport { RootState } from \"./store\";\r\nimport { DUserAction, DUserState, UserLoginState } from \"../types\";\r\nconst authSlice = createSlice({\r\n    name:'auth',\r\n    initialState: {user:null,token:null},\r\n    reducers:{\r\n        setCredentials: (state,action) =>{\r\n            const {user,accessToken} = action.payload\r\n            state.user = user\r\n            state.token = accessToken\r\n        },\r\n        logOut : (state:UserLoginState,action:DUserAction) =>{\r\n            state.user = null;\r\n            state.token = null;\r\n        }\r\n    },\r\n})\r\n\r\nexport const {setCredentials,logOut} = authSlice.actions\r\n\r\nexport default authSlice.reducer\r\n\r\nexport const selectCurrentUser = (state:any) => state.auth.user\r\nexport const selectCurrentToken = (state:any) =>state.auth.token\r\n\r\n\r\n//state to be defined with type\r\n\r\n// ------> 1"],"mappings":"AAAA,SAA8BA,WAAW,QAAQ,kBAAkB;AAGnE,MAAMC,SAAS,GAAGD,WAAW,CAAC;EAC1BE,IAAI,EAAC,MAAM;EACXC,YAAY,EAAE;IAACC,IAAI,EAAC,IAAI;IAACC,KAAK,EAAC;EAAI,CAAC;EACpCC,QAAQ,EAAC;IACLC,cAAc,EAAEA,CAACC,KAAK,EAACC,MAAM,KAAI;MAC7B,MAAM;QAACL,IAAI;QAACM;MAAW,CAAC,GAAGD,MAAM,CAACE,OAAO;MACzCH,KAAK,CAACJ,IAAI,GAAGA,IAAI;MACjBI,KAAK,CAACH,KAAK,GAAGK,WAAW;IAC7B,CAAC;IACDE,MAAM,EAAGA,CAACJ,KAAoB,EAACC,MAAkB,KAAI;MACjDD,KAAK,CAACJ,IAAI,GAAG,IAAI;MACjBI,KAAK,CAACH,KAAK,GAAG,IAAI;IACtB;EACJ;AACJ,CAAC,CAAC;AAEF,OAAO,MAAM;EAACE,cAAc;EAACK;AAAM,CAAC,GAAGX,SAAS,CAACY,OAAO;AAExD,eAAeZ,SAAS,CAACa,OAAO;AAEhC,OAAO,MAAMC,iBAAiB,GAAIP,KAAS,IAAKA,KAAK,CAACQ,IAAI,CAACZ,IAAI;AAC/D,OAAO,MAAMa,kBAAkB,GAAIT,KAAS,IAAIA,KAAK,CAACQ,IAAI,CAACX,KAAK;;AAGhE;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}